openjdk/openjdk.sh
[openjdk] 
[openjdk] == openjdk unit test ==
[openjdk] [INFO] generating benchmarks.jar by maven tool first:
[openjdk] 
[openjdk] [INFO] Test docker hub official image first:
[openjdk] 
# JMH version: 1.21
# VM version: JDK 1.8.0_222, OpenJDK 64-Bit Server VM, 25.222-b10
# VM invoker: /usr/local/openjdk-8/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 3400470121.786 ops/s
# Warmup Iteration   2: 3414393258.281 ops/s
# Warmup Iteration   3: 3409184778.534 ops/s
# Warmup Iteration   4: 3402110789.353 ops/s
# Warmup Iteration   5: 3414177639.993 ops/s
Iteration   1: 3366658289.086 ops/s
Iteration   2: 3351261559.506 ops/s
Iteration   3: 3407634396.161 ops/s
Iteration   4: 3400629370.167 ops/s
Iteration   5: 3402774654.849 ops/s

# Run progress: 20.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 3407844362.323 ops/s
# Warmup Iteration   2: 3385226401.283 ops/s
# Warmup Iteration   3: 3390395928.511 ops/s
# Warmup Iteration   4: 3419606124.704 ops/s
# Warmup Iteration   5: 3394258316.331 ops/s
Iteration   1: 3398021118.837 ops/s
Iteration   2: 3412100493.230 ops/s
Iteration   3: 3405339930.270 ops/s
Iteration   4: 3408977373.414 ops/s
Iteration   5: 3412078357.954 ops/s

# Run progress: 40.00% complete, ETA 00:05:00
# Fork: 3 of 5
# Warmup Iteration   1: 3382180799.916 ops/s
# Warmup Iteration   2: 3389402364.211 ops/s
# Warmup Iteration   3: 3393476469.357 ops/s
# Warmup Iteration   4: 3402021596.738 ops/s
# Warmup Iteration   5: 3389509525.970 ops/s
Iteration   1: 3393761861.209 ops/s
Iteration   2: 3366812771.475 ops/s
Iteration   3: 3388414986.120 ops/s
Iteration   4: 3393600487.807 ops/s
Iteration   5: 3393464613.844 ops/s

# Run progress: 60.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 3399210989.949 ops/s
# Warmup Iteration   2: 3407359638.939 ops/s
# Warmup Iteration   3: 3390850578.804 ops/s
# Warmup Iteration   4: 3386566255.307 ops/s
# Warmup Iteration   5: 3400346246.861 ops/s
Iteration   1: 3373421470.784 ops/s
Iteration   2: 3377542576.479 ops/s
Iteration   3: 3403840790.992 ops/s
Iteration   4: 3405539537.633 ops/s
Iteration   5: 3399332821.867 ops/s

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 3405112784.266 ops/s
# Warmup Iteration   2: 3415276515.185 ops/s
# Warmup Iteration   3: 3408851820.994 ops/s
# Warmup Iteration   4: 3405454834.497 ops/s
# Warmup Iteration   5: 3395829403.898 ops/s
Iteration   1: 3402433335.240 ops/s
Iteration   2: 3386122441.248 ops/s
Iteration   3: 3376989476.274 ops/s
Iteration   4: 3394747091.737 ops/s
Iteration   5: 3409771141.090 ops/s


Result "org.sample.MyBenchmark.testMethod":
  3393250837.891 ±(99.9%) 12122907.801 ops/s [Average]
  (min, avg, max) = (3351261559.506, 3393250837.891, 3412100493.230), stdev = 16183735.075
  CI (99.9%): [3381127930.090, 3405373745.692] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score          Error  Units
MyBenchmark.testMethod  thrpt   25  3393250837.891 ± 12122907.801  ops/s
[openjdk] [INFO] Test clear docker image:
[openjdk] 
# JMH version: 1.21
# VM version: JDK 1.8.0-internal, OpenJDK 64-Bit Server VM, 25.71-b00
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 3399320650.181 ops/s
# Warmup Iteration   2: 3402168541.183 ops/s
# Warmup Iteration   3: 3415826418.154 ops/s
# Warmup Iteration   4: 3413607338.507 ops/s
# Warmup Iteration   5: 3406086903.099 ops/s
Iteration   1: 3418732199.295 ops/s
Iteration   2: 3401836151.916 ops/s
Iteration   3: 3382850197.890 ops/s
Iteration   4: 3409811449.101 ops/s
Iteration   5: 3395754045.449 ops/s

# Run progress: 20.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 3390178362.140 ops/s
# Warmup Iteration   2: 3409027549.560 ops/s
# Warmup Iteration   3: 3408853646.569 ops/s
# Warmup Iteration   4: 3407032885.529 ops/s
# Warmup Iteration   5: 3413231130.221 ops/s
Iteration   1: 3403612666.985 ops/s
Iteration   2: 3417680700.908 ops/s
Iteration   3: 3405819998.299 ops/s
Iteration   4: 3354187275.046 ops/s
Iteration   5: 3417528984.011 ops/s

# Run progress: 40.00% complete, ETA 00:05:00
# Fork: 3 of 5
# Warmup Iteration   1: 3421358294.487 ops/s
# Warmup Iteration   2: 3408134942.829 ops/s
# Warmup Iteration   3: 3399208724.091 ops/s
# Warmup Iteration   4: 3407421551.486 ops/s
# Warmup Iteration   5: 3408109600.095 ops/s
Iteration   1: 3410767211.145 ops/s
Iteration   2: 3411630625.301 ops/s
Iteration   3: 3404588793.802 ops/s
Iteration   4: 3379572018.946 ops/s
Iteration   5: 3365703145.850 ops/s

# Run progress: 60.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 3398378690.813 ops/s
# Warmup Iteration   2: 3404674639.032 ops/s
# Warmup Iteration   3: 3411454709.318 ops/s
# Warmup Iteration   4: 3405572490.240 ops/s
# Warmup Iteration   5: 3406745110.191 ops/s
Iteration   1: 3405457661.497 ops/s
Iteration   2: 3393200125.613 ops/s
Iteration   3: 3399444267.118 ops/s
Iteration   4: 3377799583.976 ops/s
Iteration   5: 3416210457.712 ops/s

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 3387730352.297 ops/s
# Warmup Iteration   2: 3414385271.190 ops/s
# Warmup Iteration   3: 3393577482.974 ops/s
# Warmup Iteration   4: 3392211064.603 ops/s
# Warmup Iteration   5: 3406799032.807 ops/s
Iteration   1: 3388305111.394 ops/s
Iteration   2: 3401529309.908 ops/s
Iteration   3: 3420888444.329 ops/s
Iteration   4: 3407517619.834 ops/s
Iteration   5: 3402452666.255 ops/s


Result "org.sample.MyBenchmark.testMethod":
  3399715228.463 ?(99.9%) 12666264.740 ops/s [Average]
  (min, avg, max) = (3354187275.046, 3399715228.463, 3420888444.329), stdev = 16909101.043
  CI (99.9%): [3387048963.723, 3412381493.203] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score          Error  Units
MyBenchmark.testMethod  thrpt   25  3399715228.463 ? 12666264.740  ops/s
[openjdk] [INFO] Test extra official docker image, official latest image:
[openjdk] 
# JMH version: 1.21
# VM version: JDK 1.8.0_222, OpenJDK 64-Bit Server VM, 25.222-b10
# VM invoker: /usr/local/openjdk-8/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 3385134868.095 ops/s
# Warmup Iteration   2: 3408534053.161 ops/s
# Warmup Iteration   3: 3394905661.650 ops/s
# Warmup Iteration   4: 3414142811.650 ops/s
# Warmup Iteration   5: 3393849455.727 ops/s
Iteration   1: 3408879458.763 ops/s
Iteration   2: 3404117709.329 ops/s
Iteration   3: 3404341000.951 ops/s
Iteration   4: 3418156929.257 ops/s
Iteration   5: 3402674891.397 ops/s

# Run progress: 20.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 3379568064.762 ops/s
# Warmup Iteration   2: 3367970760.836 ops/s
# Warmup Iteration   3: 3378494189.474 ops/s
# Warmup Iteration   4: 3415638969.034 ops/s
# Warmup Iteration   5: 3408122263.845 ops/s
Iteration   1: 3383790582.559 ops/s
Iteration   2: 3392558850.271 ops/s
Iteration   3: 3422280761.415 ops/s
Iteration   4: 3406260047.046 ops/s
Iteration   5: 3393333303.102 ops/s

# Run progress: 40.00% complete, ETA 00:05:00
# Fork: 3 of 5
# Warmup Iteration   1: 3391766307.608 ops/s
# Warmup Iteration   2: 3271151907.064 ops/s
# Warmup Iteration   3: 3214551036.867 ops/s
# Warmup Iteration   4: 3230663321.970 ops/s
# Warmup Iteration   5: 3250939137.077 ops/s
Iteration   1: 3146357928.500 ops/s
Iteration   2: 3385771221.771 ops/s
Iteration   3: 3414607476.301 ops/s
Iteration   4: 3389603617.714 ops/s
Iteration   5: 3364979238.131 ops/s

# Run progress: 60.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 3390177017.803 ops/s
# Warmup Iteration   2: 3401780175.543 ops/s
# Warmup Iteration   3: 3419523995.106 ops/s
# Warmup Iteration   4: 3412118657.096 ops/s
# Warmup Iteration   5: 3396963634.672 ops/s
Iteration   1: 3409157557.987 ops/s
Iteration   2: 3393648923.092 ops/s
Iteration   3: 3395057459.909 ops/s
Iteration   4: 3410646300.960 ops/s
Iteration   5: 3384139730.159 ops/s

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 3373956691.765 ops/s
# Warmup Iteration   2: 3381262707.345 ops/s
# Warmup Iteration   3: 3389668183.567 ops/s
# Warmup Iteration   4: 3406022367.459 ops/s
# Warmup Iteration   5: 3424948629.418 ops/s
Iteration   1: 3351437684.470 ops/s
Iteration   2: 3409084139.915 ops/s
Iteration   3: 3418523801.405 ops/s
Iteration   4: 3390471333.130 ops/s
Iteration   5: 3407099867.036 ops/s


Result "org.sample.MyBenchmark.testMethod":
  3388279192.583 ±(99.9%) 39707870.493 ops/s [Average]
  (min, avg, max) = (3146357928.500, 3388279192.583, 3422280761.415), stdev = 53008871.056
  CI (99.9%): [3348571322.090, 3427987063.075] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score          Error  Units
MyBenchmark.testMethod  thrpt   25  3388279192.583 ± 39707870.493  ops/s
